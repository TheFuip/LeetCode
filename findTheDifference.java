import java.util.*;
public class findTheDifference {
    public static void main(String[] args) {
        /*You are given 2 strings. String 't' is generated by shuffling string 's' and then add one more letter at a random position.
         * Return the letter that was added to 't'.
         * 
         * EX: s = "abcd" t = "abcde" -> "e"
         * 
         * s = "" | t = "y" -> "y"
         */
        System.out.println("hey");
        System.out.println(findDifference("abc", "aabc"));
    }
    public static char findDifference(String s, String t){
        //if 's' is just empty we know the only difference is the 1 value contain in t, since t = s.length() + 1
        if(s.length() == 0){
            return t.charAt(0);
        }

        //have 2 hashmaps - one for all the characters in t, another for all the characters in s
        HashMap<Character, Integer> tMap = new HashMap<>();
        HashMap<Character, Integer> sMap = new HashMap<>();

        //add the current char value as the key, and how often in appears as the value
        for(char c : s.toCharArray()){
            sMap.put(c, sMap.getOrDefault(c, 0) + 1);
        }

        //loop through all the characters in t
        for(char c : t.toCharArray()){
            //if the current char in t does not appear in the prior sMap, we know this is the difference
            if(!sMap.containsKey(c)){
                return c;
            }

            //add to the tMap, current char as the key and it's frequency as the value
            tMap.put(c, tMap.getOrDefault(c, 0) + 1);

            //after the value has been added check if the current char value's frequency is greater than the one contained in the prior sMap, if it is then this is the difference so return c
            if(tMap.get(c) > sMap.get(c)){
                return c;
            }
        }
        
        return ' ';
    }

    
}
